@model UniversityMagniFinance.Models.Grades

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Grade</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group" ng-controller="GradeController">
            @Html.LabelFor(model => model.StudentID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="StudentID" class="form-control ng-valid ng-empty ng-dirty ng-valid-parse input-validation-error ng-touched" ng-model="CustLoc" ng-options="item as item.Name for item in students track by item.ID">
                    <option value="">-- Select Student --</option>
                </select>
                @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" ng-controller="GradeController">
            @Html.LabelFor(model => model.SubjectID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="SubjectID" class="form-control ng-valid ng-empty ng-dirty ng-valid-parse input-validation-error ng-touched" ng-model="CustLoc" ng-options="item as item.Name for item in subjects track by item.ID">
                    <option value="">-- Select Subject --</option>
                </select>
                @Html.ValidationMessageFor(model => model.SubjectID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Grade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Grade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back", "Index", null, null, new { @class = "btn btn-danger" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
